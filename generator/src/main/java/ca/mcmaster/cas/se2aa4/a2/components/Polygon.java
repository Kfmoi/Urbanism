package ca.mcmaster.cas.se2aa4.a2.components;

import java.util.List;

/**
 * Polygon class which serves as a high-level recorder for the data generated by
 * the Generator and any properties from the Mesh when finalized before
 * conversion.
 */
public class Polygon implements Poly {

    private double centroidX, centroidY;
    private float borderThickness;
    private int[] fillColour, borderColour;

    private List<double[]> verticesList;

    private List<double[]> neighbourList;

    public Polygon() {
        fillColour = new int[4];
        borderColour = new int[4];
    }

    public Polygon(double x, double y) {
        this();
        setCentroid(x, y);
    }

    @Override
    public int compareTo(Poly p) {
        int comp = Double.compare(centroidX, p.getCentroidX());
        return (comp != 0) ? comp : Double.compare(centroidY, p.getCentroidY());
    }

    @Override
    public List<double[]> getNeigbourList() {
        return neighbourList;
    }

    @Override
    public List<double[]> getVertexList() {
        return verticesList;
    }

    @Override
    public double getCentroidX() {
        return centroidX;
    }

    @Override
    public double getCentroidY() {
        return centroidY;
    }

    @Override
    public float getBorderThickness() {
        return borderThickness;
    }

    @Override
    public int[] getFillColour() {
        return fillColour;
    }

    @Override
    public int[] getBorderColour() {
        return borderColour;
    }

    @Override
    public void setCentroid(double x, double y) {
        centroidX = x;
        centroidY = y;
    }

    @Override
    public void setBorderThickness(float t) {
        borderThickness = t;
    }

    @Override
    public void setNeighbours(List<double[]> neighbourCentroidList) {
        neighbourList = neighbourCentroidList;
    }

    @Override
    public void setVertices(List<double[]> verticesList) {
        this.verticesList = verticesList;
    }

    @Override
    public void setFillColour(int r, int g, int b, int a) {
        fillColour[0] = r;
        fillColour[1] = g;
        fillColour[2] = b;
        fillColour[3] = a;
    }

    @Override
    public void setBorderColour(int r, int g, int b, int a) {
        borderColour[0] = r;
        borderColour[1] = g;
        borderColour[2] = b;
        borderColour[3] = a;
    }

}
